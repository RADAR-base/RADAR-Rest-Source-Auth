---
version: '3.2'

services:

  #---------------------------------------------------------------------------#
  # Management Portal                                                         #
  #---------------------------------------------------------------------------#
  managementportal-app:
    image: radarbase/management-portal:0.8.0
    depends_on:
      - radarbase-postgresql
    ports:
      - "8090:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://radarbase-postgresql:5432/managementportal
      SPRING_DATASOURCE_USERNAME: radarcns
      SPRING_DATASOURCE_PASSWORD: radarcns
      MANAGEMENTPORTAL_FRONTEND_CLIENT_SECRET: "testMe"
      MANAGEMENTPORTAL_COMMON_BASE_URL: http://localhost:8080/managementportal
      MANAGEMENTPORTAL_COMMON_MANAGEMENT_PORTAL_BASE_URL: http://localhost:8080/managementportal
      MANAGEMENTPORTAL_OAUTH_CLIENTS_FILE: /mp-includes/config/oauth_client_details.csv
      MANAGEMENTPORTAL_CATALOGUE_SERVER_ENABLE_AUTO_IMPORT: 'false'
      MANAGEMENTPORTAL_OAUTH_SIGNING_KEY_ALIAS: 'radarbase-managementportal-ec'
      JAVA_OPTS: -Xmx256m  # maximum heap size for the JVM running ManagementPortal, increase this as necessary
    volumes:
      - ./docker/etc/managementportal/:/mp-includes/config

  radarbase-postgresql:
    image: radarbase/radarbase-postgres:latest
    volumes:
      - "./data/:/var/lib/postgresql/data/"
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=radarcns
      - POSTGRES_PASSWORD=radarcns
      - POSTGRES_MULTIPLE_DATABASES=managementportal,restsourceauthorizer


#  radar-rest-sources-backend:
#    image: radarbase/radar-rest-source-auth-backend:dev
#    build:
#      context: .
#    depends_on:
#      - radarbase-postgresql
#      - managementportal-app
##    ports:
##      - "8085:8080"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://radarbase-postgresql:5432/restsourceauthorizer
#      - SPRING_DATASOURCE_USERNAME=radarcns
#      - SPRING_DATASOURCE_PASSWORD=radarcns
#      - REST_SOURCE_AUTHORIZER_SOURCE_CLIENTS_FILE_PATH=app-includes/rest_source_clients_configs.yml
#      - REST_SOURCE_AUTHORIZER_VALIDATOR=managementportal
#      - REST_SOURCE_AUTHORIZER_MANAGEMENT_PORTAL_BASE_URL=http://managementportal-app:8080/managementportal/
#      - REST_SOURCE_AUTHORIZER_MANAGEMENT_PORTAL_OAUTH_CLIENT_ID=radar_rest_sources_auth_backend
#      - REST_SOURCE_AUTHORIZER_MANAGEMENT_PORTAL_OAUTH_CLIENT_SECRET=secret
#      - LOGGING_LEVEL_ORG_RADARBASE_AUTHORIZER=DEBUG
#      - APP_SLEEP=10 # gives time for the database to boot before the application
#      - SENTRY_LOG_LEVEL='ERROR'
#      - SENTRY_DSN='https://000000000000.ingest.de.sentry.io/000000000000'
#      - SENTRY_ATTACHSTACKTRACE=true
#      - SENTRY_STACKTRACE_APP_PACKAGES=org.radarbase.authorizer
#    volumes:
#      - ./docker/etc/rest-source-authorizer/:/app-includes/
#    healthcheck:
#      test: ["CMD", "wget", "--spider", "http://localhost:8080/health"]
#      interval: 1m30s
#      timeout: 5s
#      retries: 3
#
  radar-rest-sources-authorizer:
    image: radarbase/radar-rest-source-authorizer:dev
    build:
      context: authorizer-app
      dockerfile: Dockerfile
    depends_on:
#      - radar-rest-sources-backend
      - radarbase-postgresql
      - managementportal-app
    ports:
      - "8080:80"
    environment:
      BASE_HREF: "/"
      BACKEND_BASE_URL: "http://localhost:8085/rest-sources/backend"
      VALIDATE: "true"
      AUTH_GRANT_TYPE: "authorization_code"
      AUTH_CLIENT_ID: "radar_rest_sources_authorizer"
      AUTH_CLIENT_SECRET: ""
      AUTH_CALLBACK_URL: "http://localhost:8080/login"
      AUTH_URI: "http://localhost:8090/managementportal/oauth"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:80"]
      interval: 1m30s
      timeout: 5s
      retries: 3
#
#  webserver:
#    image: nginx:1.17.3-alpine
#    ports:
#      - "8080:8080"
#    depends_on:
#      - radar-rest-sources-backend
#      - managementportal-app
#      - radar-rest-sources-authorizer
#    volumes:
#      - ./docker/etc/webserver/nginx-
